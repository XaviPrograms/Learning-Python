# Uncomment this when you reach the "Use the Force" section
train_mass = 22680
train_acceleration = 10
train_distance = 100
bomb_mass = 1


# Write your code below: 

def f_to_c(f_temp):
  c_temp = (f_temp - 32) * 5/9
  return c_temp

f100_in_celsius = f_to_c(100)

def c_to_f(c_temp):
  f_temp = c_temp * 9/5 + 32
  return f_temp

c0_in_fahrenheit = c_to_f(0)

print(c0_in_fahrenheit)

#task 5 - defining a function called get_force that takes in mass and acceleration. It should return mass multiplied by acceleration.

def get_force(mass, acceleration):
  force = mass * acceleration
  return force

#task 6 - Test get_force by calling it with the variables train_mass and train_acceleration.Save the result to a variable called train_force and print it out.
#train_mass and train_acceleration have been defined for you at the top of script.py. Make sure to uncomment those lines before trying to use these variables.

train_force = get_force(train_mass, train_acceleration)

print(train_force)

#task 7 - print string for train:force

print("The GE train supplies ", train_force, " Newtons of force.")


#task 8 - Define a function called get_energy that takes in mass and c. c is a constant that is usually set to the speed of light, which is roughly 3 x 10^8. Set c to have a default value of 3*10**8. get_energy should return mass multiplied by c squared.

def get_energy(mass, c=3 * 10**8):
  return mass * c**2


#Test get_energy by using it on bomb_mass, with the default value of c. Save the result to a variable called bomb_energy.bomb_mass has been defined for you at the top of script.py. Make sure to uncomment this line before trying to use bomb_mass

bomb_energy = get_energy(bomb_mass, 3 * 10**8)
print(bomb_energy)

#Print the string “A 1kg bomb supplies X Joules.”, with X replaced by bomb_energy.

print("A 1kg bomb supplies", bomb_energy, "Joules")

#Define a final function called get_work that takes in mass, acceleration, and distance. Work is defined as force multiplied by distance. First, get the force using get_force, then multiply that by distance. Return the result.

def get_work(mass, acceleration, distance):
  force = get_force(mass, acceleration)
  work = force * distance
  return work

#Test get_work by using it on train_mass, train_acceleration, and train_distance. Save the result to a variable called train_work.

train_work = get_work(train_mass, train_acceleration, train_distance)

print(train_work)

#Print the string "The GE train does X Joules of work over Y meters.", with X replaced with train_work and Y replaced with train_distance.

print("The GE train does", train_work, "Joules of work over", train_distance, "meters.")
